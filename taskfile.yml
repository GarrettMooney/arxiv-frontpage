version: '3'

tasks:
  index:
    deps: [lunr-sentence, lunr-abstract]
    sources:
      - data/cleaned/*.jsonl
    cmds:
      - python -m frontpage index simsity sentence
      - python -m frontpage index simsity abstract

  lunr-sentence:
    cmds:
      - python -m frontpage index lunr sentence
    sources:
      - data/cleaned/*.jsonl
    generates:
      - indices/lunr/sentence.json
  
  lunr-abstract:
    cmds:
      - python -m frontpage index lunr abstract
    sources:
      - data/cleaned/*.jsonl
    generates:
      - indices/lunr/abstract.json
  
  clean:
    cmds:
      - python -c "from frontpage.datastream import DataStream; DataStream().save_clean_download_stream()"
    sources:
      - data/downloads/*.jsonl

  build-learned-streams:
    cmds:
      - python -c "from frontpage.datastream import DataStream; DataStream().build_active_learn_stream()"
      - python -c "from frontpage.datastream import DataStream; DataStream().build_second_opinion_stream()"
    sources:
      - data/cleaned/*.jsonl
      - data/annot/annotations.jsonl
      - training
  
  stats-out:
    cmds: 
      - python -m prodigy stats -NF > /tmp/stats.jsonl
    generates:
      - tmp/stats.jsonl

  
  prepare-annotations:
    cmds:
      - python -m frontpage annotprep
    sources:
      - /tmp/stats.jsonl
    generates:
      - data/annot/annotations.jsonl
  
  train:
    cmds:
      - python -m frontpage train
    sources:
      - data/annot/annotations.jsonl

  prepare:
    cmds:
      - task: clean
      - task: index
      - task: stats-out
      - task: prepare-annotations
      - task: train
      - task: build-learned-streams

  build:
    cmds:
    - task: prepare
    - python -m frontpage build
    - python -m http.server
